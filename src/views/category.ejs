<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Category Selection</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f4f4f4;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .popup.show {
            display: block;
        }
  </style>
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-white p-3 shadow-sm">
    <div class="container-fluid">
      <a class="navbar-brand font-weight-bold" href="#">Ecommerce</a>

      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
        aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-center" id="navbarNavAltMarkup">
        <div class="navbar-nav">
          <a class="nav-link me-3" aria-current="page" href="#">Categories</a>
          <a class="nav-link me-3" href="#">Sale</a>
          <a class="nav-link me-3" href="#">Clearance</a>
          <a class="nav-link me-3" href="#">New stock</a>
          <a class="nav-link" href="#">Trending</a>
        </div>
      </div>
      <div class="navbar-nav">
        <a class="nav-link me-3" href="#"><i class="fa fa-search" aria-hidden="true"></i></a>
        <a class="nav-link" href="#"><i class="fas fa-shopping-cart"></i></a>
      </div>
    </div>
  </nav>

  <div class="container mt-5">
    <div class="row justify-content-center">
      <div class="col-md-5 shadow-lg border rounded p-4">
        <h3 class="text-center">Please mark your interests!</h3>
        <div id="selectionMessage" class="text-center">We'll keep you notified</div>
        <form id="categoryForm">
          <fieldset id="categoryFieldset">
            <legend>Select Categories:</legend>
          </fieldset>
          <br>
          <div id="pageNumbers" class="d-flex justify-content-center"></div>
          <br>
          <button type="button" onclick="submitCategories()" class="btn btn-dark">Submit</button>
        </form>
        <br>
        <div id="popupNotification" class="popup">
          Categories saved successfully!
        </div>
      </div>
    </div>
  </div>

  <script>
    let selectedCategories = [];

    const fetchCategories = async (pageNumber) => {
      try {
        if (!pageNumber) pageNumber = 1;
        const token = localStorage.getItem('token');
        const response = await fetch(`/categories?page=${pageNumber}`, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        const categories = await response.json();
        return categories;
      } catch (error) {
        console.error('Error fetching categories:', error);
        alert('Failed to fetch categories');
        return [];
      }
    };

    const renderCategories = async (pageNumber = 1) => {
      const categories = await fetchCategories(pageNumber);
      const categoryFieldset = document.getElementById('categoryFieldset');
      categoryFieldset.innerHTML = '';

      categories.forEach(category => {
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.name = 'categories';
        checkbox.value = category.id;
        checkbox.classList.add('form-check-input');

        if (selectedCategories.includes(category.id)) {
          checkbox.checked = true;
        }

        checkbox.addEventListener('change', () => {
          if (checkbox.checked) {
            selectedCategories.push(category.id);
          } else {
            selectedCategories = selectedCategories.filter(id => id !== category.id);
          }
        });
        const label = document.createElement('label');
        label.classList.add('form-check', 'd-block', 'text-dark');
        label.appendChild(checkbox);
        label.appendChild(document.createTextNode(category.name));
        categoryFieldset.appendChild(label);
      });

      renderPageNumbers(pageNumber);
    };

    const renderPageNumbers = async (currentPage) => {
      const pageNumbersContainer = document.getElementById('pageNumbers');
      pageNumbersContainer.innerHTML = '';

      for (let i = 1; i <= 17; i++) {
        const pageNumber = document.createElement('span');
        pageNumber.textContent = i;
        pageNumber.classList.add('page-number', 'mx-2');
        if (i === currentPage) {
          pageNumber.classList.add('current-page');
        } else {
          pageNumber.addEventListener('click', async () => {
            await renderCategories(i);
          });
        }
        pageNumbersContainer.appendChild(pageNumber);
      }
    };

    const showPopupNotification = () => {
      const popupNotification = document.getElementById('popupNotification');
      popupNotification.classList.add('show');
      setTimeout(() => {
        popupNotification.classList.remove('show');
        location.reload();
      }, 2000);
    };

    const submitCategories = async () => {
      try {
        const formData = {
          categories: selectedCategories
        };
        console.log('Submitting categories:', formData);

        const token = localStorage.getItem('token');
        const response = await fetch('/categories', {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (response.status === 200) {
          console.log('Categories submitted');
          showPopupNotification();
        } else {
          const responseData = await response.json();
          throw new Error(responseData.message);
        }
        selectedCategories = [];
      } catch (error) {
        console.error('Error submitting categories:', error);
        alert('Failed to submit categories');
      }
    };

    window.onload = async () => {
      const userCategoriesResponse = await fetch('/categories/user/selected', {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`,
          'Content-Type': 'application/json'
        }
      });
      const userCategoriesData = await userCategoriesResponse.json();
      selectedCategories = userCategoriesData?.message?.categories || [];

      renderCategories();
    };
  </script>
</body>

</html>
